{"id":"node_modules/core-js/internals/regexp-exec.js","dependencies":[{"name":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\package.json","includedInParent":true,"mtime":1710601249156},{"name":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1710601242175},{"name":"../internals/function-call","loc":{"line":4,"column":19,"index":205},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\function-call.js"},{"name":"../internals/function-uncurry-this","loc":{"line":5,"column":26,"index":263},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/to-string","loc":{"line":6,"column":23,"index":326},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\to-string.js"},{"name":"../internals/regexp-flags","loc":{"line":7,"column":26,"index":380},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-flags.js"},{"name":"../internals/regexp-sticky-helpers","loc":{"line":8,"column":28,"index":439},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-sticky-helpers.js"},{"name":"../internals/shared","loc":{"line":9,"column":21,"index":500},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\shared.js"},{"name":"../internals/object-create","loc":{"line":10,"column":21,"index":546},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\object-create.js"},{"name":"../internals/internal-state","loc":{"line":11,"column":31,"index":609},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\internal-state.js"},{"name":"../internals/regexp-unsupported-dot-all","loc":{"line":12,"column":34,"index":680},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-unsupported-dot-all.js"},{"name":"../internals/regexp-unsupported-ncg","loc":{"line":13,"column":30,"index":755},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-unsupported-ncg.js"}],"generated":{"js":"'use strict';\r\n/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\r\n/* eslint-disable regexp/no-useless-quantifier -- testing */\r\nvar call = require('../internals/function-call');\r\nvar uncurryThis = require('../internals/function-uncurry-this');\r\nvar toString = require('../internals/to-string');\r\nvar regexpFlags = require('../internals/regexp-flags');\r\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\r\nvar shared = require('../internals/shared');\r\nvar create = require('../internals/object-create');\r\nvar getInternalState = require('../internals/internal-state').get;\r\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\r\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\r\n\r\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\r\nvar nativeExec = RegExp.prototype.exec;\r\nvar patchedExec = nativeExec;\r\nvar charAt = uncurryThis(''.charAt);\r\nvar indexOf = uncurryThis(''.indexOf);\r\nvar replace = uncurryThis(''.replace);\r\nvar stringSlice = uncurryThis(''.slice);\r\n\r\nvar UPDATES_LAST_INDEX_WRONG = (function () {\r\n  var re1 = /a/;\r\n  var re2 = /b*/g;\r\n  call(nativeExec, re1, 'a');\r\n  call(nativeExec, re2, 'a');\r\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\r\n})();\r\n\r\nvar UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;\r\n\r\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\r\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\r\n\r\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\r\n\r\nif (PATCH) {\r\n  patchedExec = function exec(string) {\r\n    var re = this;\r\n    var state = getInternalState(re);\r\n    var str = toString(string);\r\n    var raw = state.raw;\r\n    var result, reCopy, lastIndex, match, i, object, group;\r\n\r\n    if (raw) {\r\n      raw.lastIndex = re.lastIndex;\r\n      result = call(patchedExec, raw, str);\r\n      re.lastIndex = raw.lastIndex;\r\n      return result;\r\n    }\r\n\r\n    var groups = state.groups;\r\n    var sticky = UNSUPPORTED_Y && re.sticky;\r\n    var flags = call(regexpFlags, re);\r\n    var source = re.source;\r\n    var charsAdded = 0;\r\n    var strCopy = str;\r\n\r\n    if (sticky) {\r\n      flags = replace(flags, 'y', '');\r\n      if (indexOf(flags, 'g') === -1) {\r\n        flags += 'g';\r\n      }\r\n\r\n      strCopy = stringSlice(str, re.lastIndex);\r\n      // Support anchored sticky behavior.\r\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\\n')) {\r\n        source = '(?: ' + source + ')';\r\n        strCopy = ' ' + strCopy;\r\n        charsAdded++;\r\n      }\r\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\r\n      // simulate the 'y' flag.\r\n      reCopy = new RegExp('^(?:' + source + ')', flags);\r\n    }\r\n\r\n    if (NPCG_INCLUDED) {\r\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\r\n    }\r\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\r\n\r\n    match = call(nativeExec, sticky ? reCopy : re, strCopy);\r\n\r\n    if (sticky) {\r\n      if (match) {\r\n        match.input = stringSlice(match.input, charsAdded);\r\n        match[0] = stringSlice(match[0], charsAdded);\r\n        match.index = re.lastIndex;\r\n        re.lastIndex += match[0].length;\r\n      } else re.lastIndex = 0;\r\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\r\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\r\n    }\r\n    if (NPCG_INCLUDED && match && match.length > 1) {\r\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\r\n      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/\r\n      call(nativeReplace, match[0], reCopy, function () {\r\n        for (i = 1; i < arguments.length - 2; i++) {\r\n          if (arguments[i] === undefined) match[i] = undefined;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (match && groups) {\r\n      match.groups = object = create(null);\r\n      for (i = 0; i < groups.length; i++) {\r\n        group = groups[i];\r\n        object[group[0]] = match[group[1]];\r\n      }\r\n    }\r\n\r\n    return match;\r\n  };\r\n}\r\n\r\nmodule.exports = patchedExec;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/core-js/internals/regexp-exec.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}}],"sources":{"node_modules/core-js/internals/regexp-exec.js":"'use strict';\r\n/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\r\n/* eslint-disable regexp/no-useless-quantifier -- testing */\r\nvar call = require('../internals/function-call');\r\nvar uncurryThis = require('../internals/function-uncurry-this');\r\nvar toString = require('../internals/to-string');\r\nvar regexpFlags = require('../internals/regexp-flags');\r\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\r\nvar shared = require('../internals/shared');\r\nvar create = require('../internals/object-create');\r\nvar getInternalState = require('../internals/internal-state').get;\r\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\r\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\r\n\r\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\r\nvar nativeExec = RegExp.prototype.exec;\r\nvar patchedExec = nativeExec;\r\nvar charAt = uncurryThis(''.charAt);\r\nvar indexOf = uncurryThis(''.indexOf);\r\nvar replace = uncurryThis(''.replace);\r\nvar stringSlice = uncurryThis(''.slice);\r\n\r\nvar UPDATES_LAST_INDEX_WRONG = (function () {\r\n  var re1 = /a/;\r\n  var re2 = /b*/g;\r\n  call(nativeExec, re1, 'a');\r\n  call(nativeExec, re2, 'a');\r\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\r\n})();\r\n\r\nvar UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;\r\n\r\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\r\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\r\n\r\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\r\n\r\nif (PATCH) {\r\n  patchedExec = function exec(string) {\r\n    var re = this;\r\n    var state = getInternalState(re);\r\n    var str = toString(string);\r\n    var raw = state.raw;\r\n    var result, reCopy, lastIndex, match, i, object, group;\r\n\r\n    if (raw) {\r\n      raw.lastIndex = re.lastIndex;\r\n      result = call(patchedExec, raw, str);\r\n      re.lastIndex = raw.lastIndex;\r\n      return result;\r\n    }\r\n\r\n    var groups = state.groups;\r\n    var sticky = UNSUPPORTED_Y && re.sticky;\r\n    var flags = call(regexpFlags, re);\r\n    var source = re.source;\r\n    var charsAdded = 0;\r\n    var strCopy = str;\r\n\r\n    if (sticky) {\r\n      flags = replace(flags, 'y', '');\r\n      if (indexOf(flags, 'g') === -1) {\r\n        flags += 'g';\r\n      }\r\n\r\n      strCopy = stringSlice(str, re.lastIndex);\r\n      // Support anchored sticky behavior.\r\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\\n')) {\r\n        source = '(?: ' + source + ')';\r\n        strCopy = ' ' + strCopy;\r\n        charsAdded++;\r\n      }\r\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\r\n      // simulate the 'y' flag.\r\n      reCopy = new RegExp('^(?:' + source + ')', flags);\r\n    }\r\n\r\n    if (NPCG_INCLUDED) {\r\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\r\n    }\r\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\r\n\r\n    match = call(nativeExec, sticky ? reCopy : re, strCopy);\r\n\r\n    if (sticky) {\r\n      if (match) {\r\n        match.input = stringSlice(match.input, charsAdded);\r\n        match[0] = stringSlice(match[0], charsAdded);\r\n        match.index = re.lastIndex;\r\n        re.lastIndex += match[0].length;\r\n      } else re.lastIndex = 0;\r\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\r\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\r\n    }\r\n    if (NPCG_INCLUDED && match && match.length > 1) {\r\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\r\n      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/\r\n      call(nativeReplace, match[0], reCopy, function () {\r\n        for (i = 1; i < arguments.length - 2; i++) {\r\n          if (arguments[i] === undefined) match[i] = undefined;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (match && groups) {\r\n      match.groups = object = create(null);\r\n      for (i = 0; i < groups.length; i++) {\r\n        group = groups[i];\r\n        object[group[0]] = match[group[1]];\r\n      }\r\n    }\r\n\r\n    return match;\r\n  };\r\n}\r\n\r\nmodule.exports = patchedExec;\r\n"},"lineCount":118}},"error":null,"hash":"93b363833b52cff572c3f7ec6d0f5dd5","cacheData":{"env":{}}}