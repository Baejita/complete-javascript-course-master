{"id":"node_modules/core-js/internals/string-trim.js","dependencies":[{"name":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\package.json","includedInParent":true,"mtime":1710601249156},{"name":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1710601242175},{"name":"../internals/function-uncurry-this","loc":{"line":2,"column":26,"index":41},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\string-trim.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/require-object-coercible","loc":{"line":3,"column":37,"index":118},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\string-trim.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\require-object-coercible.js"},{"name":"../internals/to-string","loc":{"line":4,"column":23,"index":184},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\string-trim.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\to-string.js"},{"name":"../internals/whitespaces","loc":{"line":5,"column":26,"index":238},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\string-trim.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\whitespaces.js"}],"generated":{"js":"'use strict';\r\nvar uncurryThis = require('../internals/function-uncurry-this');\r\nvar requireObjectCoercible = require('../internals/require-object-coercible');\r\nvar toString = require('../internals/to-string');\r\nvar whitespaces = require('../internals/whitespaces');\r\n\r\nvar replace = uncurryThis(''.replace);\r\nvar ltrim = RegExp('^[' + whitespaces + ']+');\r\nvar rtrim = RegExp('(^|[^' + whitespaces + '])[' + whitespaces + ']+$');\r\n\r\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\r\nvar createMethod = function (TYPE) {\r\n  return function ($this) {\r\n    var string = toString(requireObjectCoercible($this));\r\n    if (TYPE & 1) string = replace(string, ltrim, '');\r\n    if (TYPE & 2) string = replace(string, rtrim, '$1');\r\n    return string;\r\n  };\r\n};\r\n\r\nmodule.exports = {\r\n  // `String.prototype.{ trimLeft, trimStart }` methods\r\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\r\n  start: createMethod(1),\r\n  // `String.prototype.{ trimRight, trimEnd }` methods\r\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\r\n  end: createMethod(2),\r\n  // `String.prototype.trim` method\r\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\r\n  trim: createMethod(3)\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-js/internals/string-trim.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"node_modules/core-js/internals/string-trim.js":"'use strict';\r\nvar uncurryThis = require('../internals/function-uncurry-this');\r\nvar requireObjectCoercible = require('../internals/require-object-coercible');\r\nvar toString = require('../internals/to-string');\r\nvar whitespaces = require('../internals/whitespaces');\r\n\r\nvar replace = uncurryThis(''.replace);\r\nvar ltrim = RegExp('^[' + whitespaces + ']+');\r\nvar rtrim = RegExp('(^|[^' + whitespaces + '])[' + whitespaces + ']+$');\r\n\r\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\r\nvar createMethod = function (TYPE) {\r\n  return function ($this) {\r\n    var string = toString(requireObjectCoercible($this));\r\n    if (TYPE & 1) string = replace(string, ltrim, '');\r\n    if (TYPE & 2) string = replace(string, rtrim, '$1');\r\n    return string;\r\n  };\r\n};\r\n\r\nmodule.exports = {\r\n  // `String.prototype.{ trimLeft, trimStart }` methods\r\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\r\n  start: createMethod(1),\r\n  // `String.prototype.{ trimRight, trimEnd }` methods\r\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\r\n  end: createMethod(2),\r\n  // `String.prototype.trim` method\r\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\r\n  trim: createMethod(3)\r\n};\r\n"},"lineCount":32}},"error":null,"hash":"83e7dd604c5f0caa89e4dd2b14703796","cacheData":{"env":{}}}