{"id":"node_modules/core-js/internals/string-multibyte.js","dependencies":[{"name":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\package.json","includedInParent":true,"mtime":1710694822527},{"name":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1710691878794},{"name":"../internals/function-uncurry-this","loc":{"line":2,"column":26,"index":41},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\string-multibyte.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/to-integer-or-infinity","loc":{"line":3,"column":34,"index":115},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\string-multibyte.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\to-integer-or-infinity.js"},{"name":"../internals/to-string","loc":{"line":4,"column":23,"index":179},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\string-multibyte.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\to-string.js"},{"name":"../internals/require-object-coercible","loc":{"line":5,"column":37,"index":244},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\string-multibyte.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\require-object-coercible.js"}],"generated":{"js":"'use strict';\r\nvar uncurryThis = require('../internals/function-uncurry-this');\r\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\r\nvar toString = require('../internals/to-string');\r\nvar requireObjectCoercible = require('../internals/require-object-coercible');\r\n\r\nvar charAt = uncurryThis(''.charAt);\r\nvar charCodeAt = uncurryThis(''.charCodeAt);\r\nvar stringSlice = uncurryThis(''.slice);\r\n\r\nvar createMethod = function (CONVERT_TO_STRING) {\r\n  return function ($this, pos) {\r\n    var S = toString(requireObjectCoercible($this));\r\n    var position = toIntegerOrInfinity(pos);\r\n    var size = S.length;\r\n    var first, second;\r\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\r\n    first = charCodeAt(S, position);\r\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\r\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\r\n        ? CONVERT_TO_STRING\r\n          ? charAt(S, position)\r\n          : first\r\n        : CONVERT_TO_STRING\r\n          ? stringSlice(S, position, position + 2)\r\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\r\n  };\r\n};\r\n\r\nmodule.exports = {\r\n  // `String.prototype.codePointAt` method\r\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\r\n  codeAt: createMethod(false),\r\n  // `String.prototype.at` method\r\n  // https://github.com/mathiasbynens/String.prototype.at\r\n  charAt: createMethod(true)\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/core-js/internals/string-multibyte.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}}],"sources":{"node_modules/core-js/internals/string-multibyte.js":"'use strict';\r\nvar uncurryThis = require('../internals/function-uncurry-this');\r\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\r\nvar toString = require('../internals/to-string');\r\nvar requireObjectCoercible = require('../internals/require-object-coercible');\r\n\r\nvar charAt = uncurryThis(''.charAt);\r\nvar charCodeAt = uncurryThis(''.charCodeAt);\r\nvar stringSlice = uncurryThis(''.slice);\r\n\r\nvar createMethod = function (CONVERT_TO_STRING) {\r\n  return function ($this, pos) {\r\n    var S = toString(requireObjectCoercible($this));\r\n    var position = toIntegerOrInfinity(pos);\r\n    var size = S.length;\r\n    var first, second;\r\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\r\n    first = charCodeAt(S, position);\r\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\r\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\r\n        ? CONVERT_TO_STRING\r\n          ? charAt(S, position)\r\n          : first\r\n        : CONVERT_TO_STRING\r\n          ? stringSlice(S, position, position + 2)\r\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\r\n  };\r\n};\r\n\r\nmodule.exports = {\r\n  // `String.prototype.codePointAt` method\r\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\r\n  codeAt: createMethod(false),\r\n  // `String.prototype.at` method\r\n  // https://github.com/mathiasbynens/String.prototype.at\r\n  charAt: createMethod(true)\r\n};\r\n"},"lineCount":38}},"error":null,"hash":"3d4fdeee4305843a449c681d72b150f3","cacheData":{"env":{}}}