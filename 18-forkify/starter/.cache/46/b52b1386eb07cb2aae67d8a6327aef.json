{"id":"node_modules/core-js/internals/number-is-finite.js","dependencies":[{"name":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\package.json","includedInParent":true,"mtime":1710601249156},{"name":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1710601242175},{"name":"../internals/global","loc":{"line":2,"column":21,"index":36},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\number-is-finite.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\global.js"}],"generated":{"js":"\n'use strict';\r\nvar global = require('../internals/global');\r\n\r\nvar globalIsFinite = global.isFinite;\r\n\r\n// `Number.isFinite` method\r\n// https://tc39.es/ecma262/#sec-number.isfinite\r\n// eslint-disable-next-line es/no-number-isfinite -- safe\r\nmodule.exports = Number.isFinite || function isFinite(it) {\r\n  return typeof it == 'number' && globalIsFinite(it);\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/internals/number-is-finite.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}}],"sources":{"node_modules/core-js/internals/number-is-finite.js":"'use strict';\r\nvar global = require('../internals/global');\r\n\r\nvar globalIsFinite = global.isFinite;\r\n\r\n// `Number.isFinite` method\r\n// https://tc39.es/ecma262/#sec-number.isfinite\r\n// eslint-disable-next-line es/no-number-isfinite -- safe\r\nmodule.exports = Number.isFinite || function isFinite(it) {\r\n  return typeof it == 'number' && globalIsFinite(it);\r\n};\r\n"},"lineCount":13}},"error":null,"hash":"1bcf45c6f89168f39b207f01cc425dec","cacheData":{"env":{}}}