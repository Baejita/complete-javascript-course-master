{"id":"node_modules/core-js/modules/es.regexp.sticky.js","dependencies":[{"name":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\package.json","includedInParent":true,"mtime":1710694822527},{"name":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1710691878794},{"name":"../internals/descriptors","loc":{"line":2,"column":26,"index":41},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\modules\\es.regexp.sticky.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\descriptors.js"},{"name":"../internals/regexp-sticky-helpers","loc":{"line":3,"column":28,"index":99},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\modules\\es.regexp.sticky.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\regexp-sticky-helpers.js"},{"name":"../internals/classof-raw","loc":{"line":4,"column":22,"index":175},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\modules\\es.regexp.sticky.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\classof-raw.js"},{"name":"../internals/define-built-in-accessor","loc":{"line":5,"column":36,"index":241},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\modules\\es.regexp.sticky.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\define-built-in-accessor.js"},{"name":"../internals/internal-state","loc":{"line":6,"column":31,"index":315},"parent":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\modules\\es.regexp.sticky.js","resolved":"D:\\JavaScript\\complete-javascript-course-master\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\internals\\internal-state.js"}],"generated":{"js":"'use strict';\r\nvar DESCRIPTORS = require('../internals/descriptors');\r\nvar MISSED_STICKY = require('../internals/regexp-sticky-helpers').MISSED_STICKY;\r\nvar classof = require('../internals/classof-raw');\r\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\r\nvar getInternalState = require('../internals/internal-state').get;\r\n\r\nvar RegExpPrototype = RegExp.prototype;\r\nvar $TypeError = TypeError;\r\n\r\n// `RegExp.prototype.sticky` getter\r\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.sticky\r\nif (DESCRIPTORS && MISSED_STICKY) {\r\n  defineBuiltInAccessor(RegExpPrototype, 'sticky', {\r\n    configurable: true,\r\n    get: function sticky() {\r\n      if (this === RegExpPrototype) return;\r\n      // We can't use InternalStateModule.getterFor because\r\n      // we don't add metadata for regexps created by a literal.\r\n      if (classof(this) === 'RegExp') {\r\n        return !!getInternalState(this).sticky;\r\n      }\r\n      throw new $TypeError('Incompatible receiver, RegExp required');\r\n    }\r\n  });\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-js/modules/es.regexp.sticky.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"node_modules/core-js/modules/es.regexp.sticky.js":"'use strict';\r\nvar DESCRIPTORS = require('../internals/descriptors');\r\nvar MISSED_STICKY = require('../internals/regexp-sticky-helpers').MISSED_STICKY;\r\nvar classof = require('../internals/classof-raw');\r\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\r\nvar getInternalState = require('../internals/internal-state').get;\r\n\r\nvar RegExpPrototype = RegExp.prototype;\r\nvar $TypeError = TypeError;\r\n\r\n// `RegExp.prototype.sticky` getter\r\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.sticky\r\nif (DESCRIPTORS && MISSED_STICKY) {\r\n  defineBuiltInAccessor(RegExpPrototype, 'sticky', {\r\n    configurable: true,\r\n    get: function sticky() {\r\n      if (this === RegExpPrototype) return;\r\n      // We can't use InternalStateModule.getterFor because\r\n      // we don't add metadata for regexps created by a literal.\r\n      if (classof(this) === 'RegExp') {\r\n        return !!getInternalState(this).sticky;\r\n      }\r\n      throw new $TypeError('Incompatible receiver, RegExp required');\r\n    }\r\n  });\r\n}\r\n"},"lineCount":27}},"error":null,"hash":"e9a631ac18b8509e3c676df3f0ad3dc5","cacheData":{"env":{}}}